package tank;

public class Ditank extends Tank implements Runnable{
	private int sd=2;
	public int getSd() {
		return sd;
	}
	public void setSd(int sd) {
		this.sd = sd;
	}
	Ditank(int x,int y){
		super(x,y);
	}
	public void run(){//Ïß³Ì 
		for(;;){//ÒÆ¶¯
			if(this.getTksm()==true){
				switch (getFx()) {
				case 1:
					for(int i=0;i<50;i++){
					int ys=getY();
					if(ys>0){
					ys-=sd;
					setY(ys);
					}
					try {
						Thread.sleep(50);
					} catch (Exception e) {}
					}
					break;
					
				case 2:
					for(int i=0;i<50;i++){
					int yx=getY();
					if(yx<620){
					yx+=sd;
					setY(yx);
					}
					try {
						Thread.sleep(50);
					} catch (Exception e) {}
					}
					break;
					
				case 3:
					for(int i=0;i<50;i++){
					int xz=getX();
					if(xz>0){
					xz-=sd;
					setX(xz);
					}
					try {
						Thread.sleep(50);
					} catch (Exception e) {}
					}
					break;
					
				case 4:
					for(int i=0;i<50;i++){
					int xy=getX();
					if(xy<580){
					xy+=sd;
					setX(xy);
					}
					try {
						Thread.sleep(50);
					} catch (Exception e) {}
					}
					break;
				}
				
				setFx((int)((Math.random()*4)+1));
			}else {
				break;
			}
		}
	}
}
